# nginx config file for our Django project

# the upstream component nginx needs to connect to
upstream django {
    server unix:/usr/src/app/app.sock; # file socket
}

# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    # server_name yoursite.com;
    charset     utf-8;

    # max upload size
    #client_max_body_size 75M;   # adjust to taste
    #server_tokens off;

    # Allow certbot access via port 80 to create ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect anything else to port 443 (ssl)
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    # server context for secure access
    listen 443 ssl;
    # server_name yoursite.com;
    charset     utf-8;
    #server_tokens off;

    # SSL cert info. These directories are from the host, mounted by docker-compose
    ssl_certificate /etc/letsencrypt/live/yoursite.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yoursite.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Django media
    location /media  {
        alias /usr/src/app/media;  # your Django project's media files - amend as required
    }

    # Django static files
    location /static {
        alias /usr/src/app/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
    #    proxy_pass  http:/yoursite.com;
    #    proxy_set_header    Host                $http_host;
    #    proxy_set_header    X-Real-IP           $remote_addr;
    #    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    #    proxy_set_header    X-Forwarded-Proto   $scheme;
        uwsgi_pass  unix:/usr/src/app/app.sock;
        include     /usr/src/app/uwsgi_params; # the uwsgi_params file you installed
    }
}